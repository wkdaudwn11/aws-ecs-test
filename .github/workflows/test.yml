on:
  push:
    branches: [test]
  pull_request:
    branches: [test]

name: Deploy to Amazon ECS

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install yarn
        run: npm install yarn -g

      - name: Cache node modules # node modules 캐싱
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: yarn build:dev

      - name: Show pwd
        run: pwd

      - name: Show list
        run: ls

      - name: Archive production artifacts # upload file
        uses: actions/upload-artifact@v1
        with:
          name: build # artifact name
          path: build # upload path

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Download production artifacts # download file
        uses: actions/download-artifact@v1
        with:
          name: build # artifact name

      - name: Show pwd
        run: pwd

      - name: Show list
        run: ls

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: 923518955386.dkr.ecr.ap-northeast-2.amazonaws.com
          ECR_REPOSITORY: ecr-repo-test
          IMAGE_TAG: v1.2.0
        run: docker build -f Dockerfile-test -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
